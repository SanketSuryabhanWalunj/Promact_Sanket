export const StringConstants = {

  someErrorOccuredPleaseTryAgainLater: 'Some error occured.Please try again later!',
  internName: 'Intern Name',
  startDate: 'Start Date',
  endDate: 'End Date',
  type: 'Type',
  totalDays: 'Total Days',
  approvalStatus: 'Approval Status',
  pending: 'Pending',
  approved: 'Approved',
  rejected: 'Rejected',
  none: 'None',
  appliedDate: 'Applied Date',
  reasonForLeave: 'Reason For Leave',
  updatedBy: 'Updated By',
  action: 'Action',
  approve: 'Approve',
  reject: 'Reject',
  noLeaveRecords: 'No Leave Records',
  approveLeave: 'Approve Leave',
  youAreAboutTo: 'You are about to',
  leaveDoYouWantToProceed: 'leave. Do you want to proceed?',
  reason: 'Reason:',
  rejectLeave: 'Reject Leave',
  enterValidReason: 'Enter a valid reason',
  saveChanges: 'Save Changes',
  firstHalf: 'First Half',
  secondHalf: 'Second Half',
  add: 'Add',
  create: 'Create',
  update : 'Update',
  id : 'id',
  course: {
    courseTitle: 'Course',
    courseDuration: 'Course Duration',
    courseDurationType: 'Course Duration  type',
    trainingLevel: 'Training Level',
    noCourseDetails: 'No Course Details Found',
    courseNameRequired: 'Course Name is required',
    durationType: 'Duration Type',
    courseDurationrequired: 'Course Duration is required',
    createCourse: 'Create Course',
    updateCourse: 'Update Course',
    quizTimeDurationRequired: 'Quiz Time Duration is required',
    quizTimeDuration: 'Quiz Time Duration',
    quizQuestionCountRequired: 'Quiz Question Count is required',
    quizQuestionCount: 'Quiz Question Count',
    quizLabel: 'Do you want quiz:',
    validNumberValidation: 'Enter a valid number',
    durationMustBeGreater: 'Duration must be a non 0 positive number',
    courseDurationRequired: 'Course Duration is required',
    quizQuestionCountMustBeGreater: 'Quiz Question Count must be a non 0 positive number',
    quizTimeDurationMustBeGreater: 'Quiz Time Duration must be a non 0 positive number',
    onlyPositiveWholeNumbersAllowed: 'Only positive whole numbers are allowed',
    marksMustBeGreaterThanZero: 'Marks must be a non 0 positive number',
    quizMarksRequired: 'Quiz Marks is required',
    quizQuestionMarks: 'Quiz Question Marks',
    addQuestion: 'Add Question',
    questionRequired: 'Question is required',
    marks: 'Marks'
  },
  daily: 'Daily',
  weekly: 'Weekly',
  next: 'Next',
  previous: 'Previous',
  close: 'Close',
  level: 'Level',
  option1: 'Option 1',
  option2: 'Option 2',
  option3: 'Option 3',
  option4: 'Option 4',
  answer: 'Answer',
  password: {
    passwordTitle: 'Password:',
    createPassword: 'Create Your Password',
    passwordMatch: 'The Confirm Password must match the Password',
    confirmPasswordRequired: ' Confirm Password is required.',
    passewordRequired: ' Password is required.',
    confirmPassword:'Confirm Password:',
    createPasswordLabel:'Create Password',
    passwordValidation: 'Password should contain at least one capital letter, a number, and a special character.',
    errorWhileCreatePassword:'An error occurred while creating the password.'
  },
  assigAssignmentLabel:'Assignment:',
  history:{
    details: 'Details',
    assignmentFeedbackLabel: "Assignment Feedback",


  },
  quiz:{
    quizLabel:'Quiz',
    instruction1: "If you have not taken the quiz, you can start the quiz with the Start Quiz button provided.",
    instruction2: "Once you have completed the quiz, kindly confirm by clicking Confirm My Quiz Completion.",
    instruction3: "Do NOT use any other navigation controls.",
    instruction4: "Do NOT close your browser tab.",
    instruction5: "Do NOT exit full screen mode until you finish.",
    instruction6: "Do NOT refresh your browser.",
    startQuiz:' Start Quiz',
    confirmQuiz:'Confirm My Quiz Completion',
    quizInstructionLabel:"Quiz Instructions"
  },
  score: 'Score:',
  percentage:"Percentage:",
  submitted:"Submitted",
  questionLabel:"Question",
  correctAnswerLabel:"(Correct Answer)",
  feedback:"Feedback:",
  requiredFeedback:"Feedback is required",
  scoreRequired:"Score is required",
  scoreCustomValidation:"Value should not exceed Total Marks",
  submitAssignment:"Submit Assignment",
  submit:"Submit",
  gitHubLink:"GitHub Link",


};



