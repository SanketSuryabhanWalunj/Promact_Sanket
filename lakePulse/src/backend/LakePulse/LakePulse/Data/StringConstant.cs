namespace LakePulse.Data
{
    public static class StringConstant
    {
        public static readonly string SuperAdminRole = "Super Admin";
        public static readonly string LakeAdminRole = "Admin";
        public static readonly string UserRole = "User";
        public static readonly string SubscribersRole = "Subscribers";
        public static readonly string system = "System";
        public static readonly string healthy = "Healthy.";
        public static readonly string lakeData = "LakeData";
        public static readonly string lakePulse = "Lake Pulse ";
        public static readonly string unknownLake = "Unknown Lake";
        public static readonly string dateFormat = "dd-MM-yyyy";
        public static readonly string chartDateFormat = "yyyy-MM-dd";
        public static readonly string lakeAddedInUserList = "Lake added in my lake successfully.";
        public static readonly string lakeNotFound = "Lake not found with this user.";
        public static readonly string lakeDeleted = "Lake deleted successfully";
        public static readonly string lakeExist = "Lake is already exist";
        public static readonly string internalServerError = "Internal server error:";
        public static readonly string lakePulseId = "LakePulseId";
        public static readonly string latitude = "Latitude";
        public static readonly string longitude = "Longitude";
        public static readonly string name = "Name";
        public static readonly string lakesRequired = "Lake Ids are required.";
        public static readonly string addedFavouriteCharacteristic = "Favourite characteristic added in user favourite successfully";
        public static readonly string characteristicAlreadyExists = "Favourite characteristic already exist with the current user";
        public static readonly string characteristicNotFound = "Favourite characteristic not found with the current user";
        public static readonly string removedFavouriteCharacteristic = "Characteristic removed from the current user favourite";
        public static readonly string errorAddFieldNote = "An error occurred while adding a field note.";
        public static readonly string fieldNoteAdded = "Lake field note added successfully";
        public static readonly string fieldNoteNotFound = "Field note not found with this user";
        public static readonly string fieldNoteRemoved = "Lake field note removed successfully";
        public static readonly string errorGetFieldNote = "An error occurred while fetching a field note.";
        public static readonly string errorUpdateFieldNote = "An error occurred while updating a field note.";
        public static readonly string fieldNoteUpdated = "Lake field note updated successfully";
        public static readonly string errorLikeDislikeFieldNote = "An error occurred while liking or disliking a field note.";
        public static readonly string errorDeletingUser = "Error deleting user:";
        public static readonly string errorRetrievingTotalUserCount = "Error retrieving total user count:";
        public static readonly string errorRetrievingUsers = "Error retrieving users:";
        public static readonly string userDeleted = "User deleted successfully";
        public static readonly string userNotFound = "User not found";
        public static readonly string userRoleUpdated = "User role updated successfully";
        public static readonly string errorUpdatingUserRole = "Error updating user role";
        public static readonly string DESC = "DESC";
        public static readonly string ASC = "ASC";
        public const string members = "members";
        public const string admins = "admins";
        public const string updates = "updates";
        public const string noProductsFound = "No products found in the order.";
        public const string invalidWebhookSignature = "Invalid webhook signature.";
        public const string webhookReceivedSuccessfully = "Webhook received successfully.";
        public const string webhookProcessingFailed = "Webhook processing failed";
        public const string failedToGetCheckoutURL = "Failed to get checkout URL";
        public const string shopifyAPIError = "Shopify API error";
        public const string unexpectedShopifyResponse = "Unexpected Shopify response";
        public const string shopifyStorefrontAPIError = "Shopify Storefront API error";
        public const string shopifyResponse = "Shopify Response";
        public const string errorAccessingDatabase = "An error occurred while accessing the database.";
        public const string errorUpdatingDatabase = "An error occurred while updating the database.";
        public const string errorMappingData = "An error occurred while mapping the data.";
        public const string unexpectedError = "An unexpected error occurred.";
        public const string errorSubscriberCount = "Error retrieving total lake subscriber count:";
        public const string NoFeaturesProvided = "No features provided.";
        public const string NoActiveSubscription = "No active subscription found for the user.";
        public const string errorHTTPRequest = "An error occurred while making an HTTP request.";
        public const string errorJSONResponse = "An error occurred while parsing the JSON response.";
        public const string errorLoggingData = "An error occurred while logging the data edit operation.";
        public const string errorDatabaseConnection = "Database connection error occurred";
        public const string locationExist = "Location already exists";
        public const string productNotFound = "Product not found";
        public const string productNotRegistered = "Product not registered";
        public const string errorSendingEmail = "An error occurred while sending the email.";
        public const string errorRetrievingUserInformation = "An error occurred while retrieving user information.";
        public const string fileUploadedSuccessfully = "File uploaded successfully.";
        public const string fileNotFound = "File not found.";
        public const string noDocumentsFound = "No documents found.";
        public const string fileOrMetadataMissing = "Files or metadata missing.";
        public const string mismatchFilesData = "Mismatch between files and metadata.";
        public const string errorRetrievingCommunityUser = "An error occurred while retrieving community user counts.";
        public const string alertSendSuccessfully = "Alert send successfully.";
        public const string invalidPageNumber = "Page number must be greater than 0";
        public const string invalidPageSize = "Page size must be greater than 0";
        public const string criticalAlertNotFound = "Critical alert not found.";
        public const string criticalAlertDeleted = "Critical alert deleted successfully.";
        public const string errorDeletingCriticalAlert = "An error occurred while deleting the critical alert.";
        public const string alertPreferencesUpdated = "Alert preferences updated successfully.";
        public const string userPreferencesNotFound = "User preferences not found.";
        public const string errorAlertAddAndEmailNotifications = "Error adding alert and sending notifications";
        public const string boathouseEmailEentSuccessfully = "Boathouse email sent successfully.";
        public const string errorAutomatedNotification = "Error in automated data source notification.";
        public const string NewDataSourceUpdates = "New Data Source Updates";
        public const string dataPartnerCreated = "Data partner created successfully.";
        public const string dataPartnerUpdated = "Data partner updated successfully.";
        public const string dataPartnerDeleted = "Data partner deleted successfully.";
        public const string dataPartnerNotFound = "Data partner not found.";
        public const string dataPartnerAlreadyExists = "Data partner already exists for this lake.";
        public const string errorCreatingDataPartner = "An error occurred while creating the data partner.";
        public const string errorUpdatingDataPartner = "An error occurred while updating the data partner.";
        public const string errorDeletingDataPartner = "An error occurred while deleting the data partner.";
        public const string errorRetrievingDataPartners = "An error occurred while retrieving data partners.";
    }
}
